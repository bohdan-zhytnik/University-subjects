// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/25/2024 09:31:07"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module MorseBDF (
	Y,
	X,
	STOP);
output 	Y;
input 	[5:0] X;
output 	STOP;

// Design Ports Information
// Y	=>  Location: PIN_Y5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// STOP	=>  Location: PIN_W3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[2]	=>  Location: PIN_W8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[3]	=>  Location: PIN_Y7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[0]	=>  Location: PIN_AA5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[1]	=>  Location: PIN_W7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[5]	=>  Location: PIN_Y6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[4]	=>  Location: PIN_AA6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \STOP~output_o ;
wire \X[5]~input_o ;
wire \X[4]~input_o ;
wire \X[1]~input_o ;
wire \instMux4|Mux0~0_combout ;
wire \X[3]~input_o ;
wire \instMux4|Mux0~1_combout ;
wire \instMux4|Mux0~3_combout ;
wire \X[2]~input_o ;
wire \instMux4|Mux0~2_combout ;
wire \instMux4|Mux0~4_combout ;
wire \X[0]~input_o ;
wire \inst1~0_combout ;


// Location: IOOBUF_X0_Y12_N16
cycloneive_io_obuf \Y~output (
	.i(\instMux4|Mux0~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y13_N2
cycloneive_io_obuf \STOP~output (
	.i(\inst1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\STOP~output_o ),
	.obar());
// synopsys translate_off
defparam \STOP~output .bus_hold = "false";
defparam \STOP~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y13_N8
cycloneive_io_ibuf \X[5]~input (
	.i(X[5]),
	.ibar(gnd),
	.o(\X[5]~input_o ));
// synopsys translate_off
defparam \X[5]~input .bus_hold = "false";
defparam \X[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y10_N15
cycloneive_io_ibuf \X[4]~input (
	.i(X[4]),
	.ibar(gnd),
	.o(\X[4]~input_o ));
// synopsys translate_off
defparam \X[4]~input .bus_hold = "false";
defparam \X[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y12_N22
cycloneive_io_ibuf \X[1]~input (
	.i(X[1]),
	.ibar(gnd),
	.o(\X[1]~input_o ));
// synopsys translate_off
defparam \X[1]~input .bus_hold = "false";
defparam \X[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y12_N0
cycloneive_lcell_comb \instMux4|Mux0~0 (
// Equation(s):
// \instMux4|Mux0~0_combout  = (\X[0]~input_o  & (\X[4]~input_o  $ (((!\X[5]~input_o  & \X[1]~input_o ))))) # (!\X[0]~input_o  & ((\X[5]~input_o  & ((!\X[1]~input_o ))) # (!\X[5]~input_o  & (!\X[4]~input_o  & \X[1]~input_o ))))

	.dataa(\X[0]~input_o ),
	.datab(\X[5]~input_o ),
	.datac(\X[4]~input_o ),
	.datad(\X[1]~input_o ),
	.cin(gnd),
	.combout(\instMux4|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \instMux4|Mux0~0 .lut_mask = 16'h83E4;
defparam \instMux4|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneive_io_ibuf \X[3]~input (
	.i(X[3]),
	.ibar(gnd),
	.o(\X[3]~input_o ));
// synopsys translate_off
defparam \X[3]~input .bus_hold = "false";
defparam \X[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y12_N2
cycloneive_lcell_comb \instMux4|Mux0~1 (
// Equation(s):
// \instMux4|Mux0~1_combout  = (\X[5]~input_o  & ((\X[4]~input_o  & ((\X[0]~input_o ) # (!\X[1]~input_o ))) # (!\X[4]~input_o  & ((\X[1]~input_o ))))) # (!\X[5]~input_o  & (((\X[4]~input_o  & \X[1]~input_o ))))

	.dataa(\X[0]~input_o ),
	.datab(\X[5]~input_o ),
	.datac(\X[4]~input_o ),
	.datad(\X[1]~input_o ),
	.cin(gnd),
	.combout(\instMux4|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \instMux4|Mux0~1 .lut_mask = 16'hBCC0;
defparam \instMux4|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y12_N6
cycloneive_lcell_comb \instMux4|Mux0~3 (
// Equation(s):
// \instMux4|Mux0~3_combout  = (\X[3]~input_o  & (!\instMux4|Mux0~0_combout  & (\X[0]~input_o  $ (\instMux4|Mux0~1_combout )))) # (!\X[3]~input_o  & (\instMux4|Mux0~1_combout  & ((\X[0]~input_o ) # (\instMux4|Mux0~0_combout ))))

	.dataa(\X[0]~input_o ),
	.datab(\instMux4|Mux0~0_combout ),
	.datac(\X[3]~input_o ),
	.datad(\instMux4|Mux0~1_combout ),
	.cin(gnd),
	.combout(\instMux4|Mux0~3_combout ),
	.cout());
// synopsys translate_off
defparam \instMux4|Mux0~3 .lut_mask = 16'h1E20;
defparam \instMux4|Mux0~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \X[2]~input (
	.i(X[2]),
	.ibar(gnd),
	.o(\X[2]~input_o ));
// synopsys translate_off
defparam \X[2]~input .bus_hold = "false";
defparam \X[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y12_N12
cycloneive_lcell_comb \instMux4|Mux0~2 (
// Equation(s):
// \instMux4|Mux0~2_combout  = (\X[0]~input_o  & (\instMux4|Mux0~1_combout  $ (((\instMux4|Mux0~0_combout ) # (!\X[3]~input_o ))))) # (!\X[0]~input_o  & (\instMux4|Mux0~0_combout  & (!\X[3]~input_o  & !\instMux4|Mux0~1_combout )))

	.dataa(\X[0]~input_o ),
	.datab(\instMux4|Mux0~0_combout ),
	.datac(\X[3]~input_o ),
	.datad(\instMux4|Mux0~1_combout ),
	.cin(gnd),
	.combout(\instMux4|Mux0~2_combout ),
	.cout());
// synopsys translate_off
defparam \instMux4|Mux0~2 .lut_mask = 16'h208E;
defparam \instMux4|Mux0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y12_N16
cycloneive_lcell_comb \instMux4|Mux0~4 (
// Equation(s):
// \instMux4|Mux0~4_combout  = (\instMux4|Mux0~3_combout  & (!\X[2]~input_o  & !\instMux4|Mux0~2_combout )) # (!\instMux4|Mux0~3_combout  & ((\instMux4|Mux0~2_combout )))

	.dataa(\instMux4|Mux0~3_combout ),
	.datab(\X[2]~input_o ),
	.datac(gnd),
	.datad(\instMux4|Mux0~2_combout ),
	.cin(gnd),
	.combout(\instMux4|Mux0~4_combout ),
	.cout());
// synopsys translate_off
defparam \instMux4|Mux0~4 .lut_mask = 16'h5522;
defparam \instMux4|Mux0~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y10_N22
cycloneive_io_ibuf \X[0]~input (
	.i(X[0]),
	.ibar(gnd),
	.o(\X[0]~input_o ));
// synopsys translate_off
defparam \X[0]~input .bus_hold = "false";
defparam \X[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y12_N26
cycloneive_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = (\X[0]~input_o  & (\X[2]~input_o  & (\X[4]~input_o  & \X[5]~input_o )))

	.dataa(\X[0]~input_o ),
	.datab(\X[2]~input_o ),
	.datac(\X[4]~input_o ),
	.datad(\X[5]~input_o ),
	.cin(gnd),
	.combout(\inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1~0 .lut_mask = 16'h8000;
defparam \inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y = \Y~output_o ;

assign STOP = \STOP~output_o ;

endmodule
