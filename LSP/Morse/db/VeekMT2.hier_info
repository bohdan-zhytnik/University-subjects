|MorseZhytnboh
LCD_DIM <= Off_VEEKMT2_LCD:inst17.LCD_DIM
LCD_POWER_CTL <= Off_VEEKMT2_LCD:inst17.LCD_POWER_CTL
LCD_EN <= Lcd16x2Text:inst20.LCD_EN
CLOCK_50 => Lcd16x2Text:inst20.CLOCK_50
CLOCK_50 => ClockDivider:inst10.CLK
CLOCK_50 => Buzzer750Hz:inst8.CLOCK_50
KEY[0] => Lcd16x2Text:inst20.ACLRN
KEY[0] => inst13.ACLR
KEY[0] => Buzzer750Hz:inst8.ACLRN
LCD_DATA[0] <> Lcd16x2Text:inst20.LCD_DATA[0]
LCD_DATA[1] <> Lcd16x2Text:inst20.LCD_DATA[1]
LCD_DATA[2] <> Lcd16x2Text:inst20.LCD_DATA[2]
LCD_DATA[3] <> Lcd16x2Text:inst20.LCD_DATA[3]
LCD_DATA[4] <> Lcd16x2Text:inst20.LCD_DATA[4]
LCD_DATA[5] <> Lcd16x2Text:inst20.LCD_DATA[5]
LCD_DATA[6] <> Lcd16x2Text:inst20.LCD_DATA[6]
LCD_DATA[7] <> Lcd16x2Text:inst20.LCD_DATA[7]
LCD_RW <= Lcd16x2Text:inst20.LCD_RW
LCD_RS <= Lcd16x2Text:inst20.LCD_RS
LCD_ON <= Lcd16x2Text:inst20.LCD_ON
AUD_ADCLRCK <= Buzzer750Hz:inst8.AUD_ADCLRCK
SW[0] => StartStop_FSM:inst5.START
AUD_ADCDAT => Buzzer750Hz:inst8.AUD_ADCDAT
I2C_SDAT <> Buzzer750Hz:inst8.I2C_SDAT
AUD_DACLRCK <= Buzzer750Hz:inst8.AUD_DACLRCK
AUD_DACDAT <= Buzzer750Hz:inst8.AUD_DACDAT
AUD_XCK <= Buzzer750Hz:inst8.AUD_XCK
AUD_BCLK <= Buzzer750Hz:inst8.AUD_BCLK
I2C_SCLK <= Buzzer750Hz:inst8.I2C_SCLK
hex0[0] <= to7SegHex:inst23.HEX[0]
hex0[1] <= to7SegHex:inst23.HEX[1]
hex0[2] <= to7SegHex:inst23.HEX[2]
hex0[3] <= to7SegHex:inst23.HEX[3]
hex0[4] <= to7SegHex:inst23.HEX[4]
hex0[5] <= to7SegHex:inst23.HEX[5]
hex0[6] <= to7SegHex:inst23.HEX[6]
hex1[0] <= to7SegHex:inst22.HEX[0]
hex1[1] <= to7SegHex:inst22.HEX[1]
hex1[2] <= to7SegHex:inst22.HEX[2]
hex1[3] <= to7SegHex:inst22.HEX[3]
hex1[4] <= to7SegHex:inst22.HEX[4]
hex1[5] <= to7SegHex:inst22.HEX[5]
hex1[6] <= to7SegHex:inst22.HEX[6]
LEDG[0] <= inst7.DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] <= ShiftLeft18:inst9.LEDR[0]
LEDR[1] <= ShiftLeft18:inst9.LEDR[1]
LEDR[2] <= ShiftLeft18:inst9.LEDR[2]
LEDR[3] <= ShiftLeft18:inst9.LEDR[3]
LEDR[4] <= ShiftLeft18:inst9.LEDR[4]
LEDR[5] <= ShiftLeft18:inst9.LEDR[5]
LEDR[6] <= ShiftLeft18:inst9.LEDR[6]
LEDR[7] <= ShiftLeft18:inst9.LEDR[7]
LEDR[8] <= ShiftLeft18:inst9.LEDR[8]
LEDR[9] <= ShiftLeft18:inst9.LEDR[9]
LEDR[10] <= ShiftLeft18:inst9.LEDR[10]
LEDR[11] <= ShiftLeft18:inst9.LEDR[11]
LEDR[12] <= ShiftLeft18:inst9.LEDR[12]
LEDR[13] <= ShiftLeft18:inst9.LEDR[13]
LEDR[14] <= ShiftLeft18:inst9.LEDR[14]
LEDR[15] <= ShiftLeft18:inst9.LEDR[15]
LEDR[16] <= ShiftLeft18:inst9.LEDR[16]
LEDR[17] <= ShiftLeft18:inst9.LEDR[17]


|MorseZhytnboh|Off_VEEKMT2_LCD:inst17
LCD_DIM <= <GND>
LCD_POWER_CTL <= <GND>


|MorseZhytnboh|Lcd16x2Text:inst20
CLOCK_50 => LcdTextWr:b2v_inst.CLOCK_50
CLOCK_50 => LcdController:b2v_inst2.CLOCK_50
ACLRN => LcdController:b2v_inst2.ACLRN
LCD_DATA[0] <> LcdController:b2v_inst2.LCD_DATA[0]
LCD_DATA[1] <> LcdController:b2v_inst2.LCD_DATA[1]
LCD_DATA[2] <> LcdController:b2v_inst2.LCD_DATA[2]
LCD_DATA[3] <> LcdController:b2v_inst2.LCD_DATA[3]
LCD_DATA[4] <> LcdController:b2v_inst2.LCD_DATA[4]
LCD_DATA[5] <> LcdController:b2v_inst2.LCD_DATA[5]
LCD_DATA[6] <> LcdController:b2v_inst2.LCD_DATA[6]
LCD_DATA[7] <> LcdController:b2v_inst2.LCD_DATA[7]
LCD_EN <= LcdController:b2v_inst2.LCD_EN
LCD_RW <= LcdController:b2v_inst2.LCD_RW
LCD_RS <= LcdController:b2v_inst2.LCD_RS
LCD_ON <= LcdController:b2v_inst2.LCD_ON


|MorseZhytnboh|Lcd16x2Text:inst20|LcdTextWr:b2v_inst
CLOCK_50 => ADDRESS[0]~reg0.CLK
CLOCK_50 => ADDRESS[1]~reg0.CLK
CLOCK_50 => ADDRESS[2]~reg0.CLK
CLOCK_50 => ADDRESS[3]~reg0.CLK
CLOCK_50 => ADDRESS[4]~reg0.CLK
CLOCK_50 => DATA[0]~reg0.CLK
CLOCK_50 => DATA[1]~reg0.CLK
CLOCK_50 => DATA[2]~reg0.CLK
CLOCK_50 => DATA[3]~reg0.CLK
CLOCK_50 => DATA[4]~reg0.CLK
CLOCK_50 => DATA[5]~reg0.CLK
CLOCK_50 => DATA[6]~reg0.CLK
CLOCK_50 => DATA[7]~reg0.CLK
CLOCK_50 => \read_text:vrdyn.CLK
CLOCK_50 => \read_text:counter[0].CLK
CLOCK_50 => \read_text:counter[1].CLK
CLOCK_50 => \read_text:counter[2].CLK
CLOCK_50 => \read_text:counter[3].CLK
CLOCK_50 => \read_text:counter[4].CLK
CLOCK_50 => \read_text:counter[5].CLK
ACKN => read_text.IN1
ACKN => read_text.IN1
ACLRN => \read_text:vrdyn.ACLR
ACLRN => \read_text:counter[0].ACLR
ACLRN => \read_text:counter[1].ACLR
ACLRN => \read_text:counter[2].ACLR
ACLRN => \read_text:counter[3].ACLR
ACLRN => \read_text:counter[4].ACLR
ACLRN => \read_text:counter[5].ACLR
ACLRN => ADDRESS[0]~reg0.ENA
ACLRN => DATA[7]~reg0.ENA
ACLRN => DATA[6]~reg0.ENA
ACLRN => DATA[5]~reg0.ENA
ACLRN => DATA[4]~reg0.ENA
ACLRN => DATA[3]~reg0.ENA
ACLRN => DATA[2]~reg0.ENA
ACLRN => DATA[1]~reg0.ENA
ACLRN => DATA[0]~reg0.ENA
ACLRN => ADDRESS[4]~reg0.ENA
ACLRN => ADDRESS[3]~reg0.ENA
ACLRN => ADDRESS[2]~reg0.ENA
ACLRN => ADDRESS[1]~reg0.ENA
ADDRESS[0] <= ADDRESS[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[1] <= ADDRESS[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[2] <= ADDRESS[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[3] <= ADDRESS[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[4] <= ADDRESS[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[0] <= DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[1] <= DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[2] <= DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[3] <= DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[4] <= DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[5] <= DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[6] <= DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[7] <= DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CLEARN_CMD <= <VCC>
RDYN <= \read_text:vrdyn.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Lcd16x2Text:inst20|LcdController:b2v_inst2
CLOCK_50 => \divider:toggle.CLK
CLOCK_50 => \divider:vfast_clock.CLK
CLOCK_50 => \divider:counter[0].CLK
CLOCK_50 => \divider:counter[1].CLK
CLOCK_50 => \divider:counter[2].CLK
CLOCK_50 => \divider:counter[3].CLK
CLOCK_50 => \divider:counter[4].CLK
CLOCK_50 => \divider:counter[5].CLK
CLOCK_50 => \divider:counter[6].CLK
CLOCK_50 => \divider:counter[7].CLK
CLOCK_50 => \divider:counter[8].CLK
CLOCK_50 => \divider:counter[9].CLK
CLOCK_50 => \divider:counter[10].CLK
CLOCK_50 => \divider:counter[11].CLK
CLOCK_50 => \divider:counter[12].CLK
CLOCK_50 => \divider:counter[13].CLK
CLOCK_50 => \divider:counter[14].CLK
CLOCK_50 => \divider:counter[15].CLK
CLOCK_50 => \divider:counter[16].CLK
CLOCK_50 => LCD_RW~reg0.CLK
CLOCK_50 => data_Z_state.CLK
CLOCK_50 => \switch_rw:vbusy_LCD_flag.CLK
CLOCK_50 => \switch_rw:nstate~1.DATAIN
CLOCK_50 => \switch_rw:state~1.DATAIN
ADDRESS[0] => LCD_DATA_OUT.DATAA
ADDRESS[1] => LCD_DATA_OUT.DATAA
ADDRESS[2] => LCD_DATA_OUT.DATAA
ADDRESS[3] => LCD_DATA_OUT.DATAA
ADDRESS[4] => LCD_DATA_OUT.DATAA
DATA[0] => VDATA.DATAA
DATA[1] => VDATA.DATAA
DATA[2] => VDATA.DATAA
DATA[3] => VDATA.DATAA
DATA[4] => VDATA.DATAA
DATA[5] => VDATA.DATAA
DATA[6] => VDATA.DATAA
DATA[7] => VDATA.DATAA
CLEARN_CMD => next_state.DATAB
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => LCD_DATA_OUT.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => VDATA.OUTPUTSELECT
CLEARN_CMD => next_state.DATAB
RDYN => VACKN.OUTPUTSELECT
RDYN => Selector19.IN3
RDYN => next_state.OUTPUTSELECT
RDYN => next_state.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => LCD_DATA_OUT.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => VDATA.OUTPUTSELECT
RDYN => Selector22.IN1
ACLRN => fast_clock_reguest.ACLR
ACLRN => \fsm:VACKN.PRESET
ACLRN => \fsm:VDATA[0].ACLR
ACLRN => \fsm:VDATA[1].ACLR
ACLRN => \fsm:VDATA[2].ACLR
ACLRN => \fsm:VDATA[3].ACLR
ACLRN => \fsm:VDATA[4].ACLR
ACLRN => \fsm:VDATA[5].ACLR
ACLRN => \fsm:VDATA[6].ACLR
ACLRN => \fsm:VDATA[7].ACLR
ACLRN => \fsm:VACLRN_OUT.ACLR
ACLRN => \fsm:vrequest_write_to_LCD.ACLR
ACLRN => \fsm:VLCD_EN.PRESET
ACLRN => \switch_rw:nstate.rws_busy.OUTPUTSELECT
ACLRN => \switch_rw:nstate.rws_read.OUTPUTSELECT
ACLRN => \switch_rw:nstate.rws_z.OUTPUTSELECT
ACLRN => \switch_rw:nstate.rws_write_data.OUTPUTSELECT
ACLRN => \divider:toggle.ACLR
ACLRN => \divider:vfast_clock.ACLR
ACLRN => \divider:counter[0].ACLR
ACLRN => \divider:counter[1].ACLR
ACLRN => \divider:counter[2].ACLR
ACLRN => \divider:counter[3].ACLR
ACLRN => \divider:counter[4].ACLR
ACLRN => \divider:counter[5].ACLR
ACLRN => \divider:counter[6].ACLR
ACLRN => \divider:counter[7].ACLR
ACLRN => \divider:counter[8].ACLR
ACLRN => \divider:counter[9].ACLR
ACLRN => \divider:counter[10].ACLR
ACLRN => \divider:counter[11].ACLR
ACLRN => \divider:counter[12].ACLR
ACLRN => \divider:counter[13].ACLR
ACLRN => \divider:counter[14].ACLR
ACLRN => \divider:counter[15].ACLR
ACLRN => \divider:counter[16].ACLR
ACLRN => \fsm:next_state~3.DATAIN
ACLRN => \fsm:current_state~3.DATAIN
ACLRN => \switch_rw:state~3.DATAIN
ACLRN => \switch_rw:vbusy_LCD_flag.ENA
ACLRN => data_Z_state.ENA
ACLRN => LCD_RW~reg0.ENA
ACLRN => \fsm:VLCD_RS.ENA
ACLRN => \fsm:ix[2].ENA
ACLRN => \fsm:ix[1].ENA
ACLRN => LCD_DATA_OUT[0].ENA
ACLRN => \fsm:ix[0].ENA
ACLRN => LCD_DATA_OUT[7].ENA
ACLRN => LCD_DATA_OUT[6].ENA
ACLRN => LCD_DATA_OUT[5].ENA
ACLRN => LCD_DATA_OUT[4].ENA
ACLRN => LCD_DATA_OUT[3].ENA
ACLRN => LCD_DATA_OUT[2].ENA
ACLRN => LCD_DATA_OUT[1].ENA
LCD_EN <= \fsm:VLCD_EN.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= LCD_RW~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RS <= \fsm:VLCD_RS.DB_MAX_OUTPUT_PORT_TYPE
LCD_ON <= <VCC>
LCD_DATA[0] <> LCD_DATA[0]
LCD_DATA[1] <> LCD_DATA[1]
LCD_DATA[2] <> LCD_DATA[2]
LCD_DATA[3] <> LCD_DATA[3]
LCD_DATA[4] <> LCD_DATA[4]
LCD_DATA[5] <> LCD_DATA[5]
LCD_DATA[6] <> LCD_DATA[6]
LCD_DATA[7] <> LCD_DATA[7]
ACKN <= \fsm:VACKN.DB_MAX_OUTPUT_PORT_TYPE
ACLRN_OUT <= \fsm:VACLRN_OUT.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Buzzer750Hz:inst8
SoundON => Buzzer:inst_Buzzer.SoundON
CLOCK_50 => Buzzer:inst_Buzzer.CLOCK_50
ACLRN => Buzzer:inst_Buzzer.ACLRN
AUD_ADCDAT => Buzzer:inst_Buzzer.AUD_ADCDAT
I2C_SDAT <> Buzzer:inst_Buzzer.I2C_SDAT
AUD_ADCLRCK <= Buzzer:inst_Buzzer.AUD_ADCLRCK
AUD_DACLRCK <= Buzzer:inst_Buzzer.AUD_DACLRCK
AUD_DACDAT <= Buzzer:inst_Buzzer.AUD_DACDAT
AUD_XCK <= Buzzer:inst_Buzzer.AUD_XCK
AUD_BCLK <= Buzzer:inst_Buzzer.AUD_BCLK
I2C_SCLK <= Buzzer:inst_Buzzer.I2C_SCLK


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer
SoundON => soundOnNeg0.DATAIN
CLOCK_50 => Buzzer_ClockGen:b2v_inst_clockGenrator.Clock_50
ACLRN => Buzzer_AudioCodec:b2v_inst_audioCodecController.AClrn
ACLRN => Buzzer_ClockGen:b2v_inst_clockGenrator.ACLRN
ACLRN => Buzzer_SinGen:b2v_inst_sinGen.ACLRN
AUD_ADCDAT => Buzzer_AdcDac:b2v_inst_adcDacController.adcData
I2C_SDAT <> Buzzer_AudioCodec:b2v_inst_audioCodecController.sda
Divider1500Hz[0] => Buzzer_SinGen:b2v_inst_sinGen.FREQ[0]
Divider1500Hz[1] => Buzzer_SinGen:b2v_inst_sinGen.FREQ[1]
Divider1500Hz[2] => Buzzer_SinGen:b2v_inst_sinGen.FREQ[2]
Divider1500Hz[3] => Buzzer_SinGen:b2v_inst_sinGen.FREQ[3]
AUD_ADCLRCK <= Buzzer_AdcDac:b2v_inst_adcDacController.adcLRSelect
AUD_DACLRCK <= Buzzer_AdcDac:b2v_inst_adcDacController.dacLRSelect
AUD_DACDAT <= Buzzer_AdcDac:b2v_inst_adcDacController.dacData
AUD_XCK <= Buzzer_ClockGen:b2v_inst_clockGenrator.AudioClock
AUD_BCLK <= Buzzer_AdcDac:b2v_inst_adcDacController.bitClock
I2C_SCLK <= Buzzer_AudioCodec:b2v_inst_audioCodecController.scl


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_AdcDac:b2v_inst_adcDacController
ACLRN => rightOutCounter[0].PRESET
ACLRN => rightOutCounter[1].PRESET
ACLRN => rightOutCounter[2].PRESET
ACLRN => rightOutCounter[3].PRESET
ACLRN => leftOutCounter[0].PRESET
ACLRN => leftOutCounter[1].PRESET
ACLRN => leftOutCounter[2].PRESET
ACLRN => leftOutCounter[3].PRESET
ACLRN => internalLRSelect.ACLR
ACLRN => LRCounter[0].ACLR
ACLRN => LRCounter[1].ACLR
ACLRN => LRCounter[2].ACLR
ACLRN => LRCounter[3].ACLR
ACLRN => LRCounter[4].ACLR
ACLRN => dacDataRightChannelRegister[0].ACLR
ACLRN => dacDataRightChannelRegister[1].ACLR
ACLRN => dacDataRightChannelRegister[2].ACLR
ACLRN => dacDataRightChannelRegister[3].ACLR
ACLRN => dacDataRightChannelRegister[4].ACLR
ACLRN => dacDataRightChannelRegister[5].ACLR
ACLRN => dacDataRightChannelRegister[6].ACLR
ACLRN => dacDataRightChannelRegister[7].ACLR
ACLRN => dacDataRightChannelRegister[8].ACLR
ACLRN => dacDataRightChannelRegister[9].ACLR
ACLRN => dacDataRightChannelRegister[10].ACLR
ACLRN => dacDataRightChannelRegister[11].ACLR
ACLRN => dacDataRightChannelRegister[12].ACLR
ACLRN => dacDataRightChannelRegister[13].ACLR
ACLRN => dacDataRightChannelRegister[14].ACLR
ACLRN => dacDataRightChannelRegister[15].ACLR
ACLRN => internalBitClock.ACLR
ACLRN => bitClockCounter[0].ACLR
ACLRN => bitClockCounter[1].ACLR
ACLRN => bitClockCounter[2].ACLR
ACLRN => bitClockCounter[3].ACLR
ACLRN => bitClockCounter[4].ACLR
ACLRN => bitClockCounter[5].ACLR
ACLRN => bitClockCounter[6].ACLR
ACLRN => bitClockCounter[7].ACLR
ACLRN => dacData~reg0.ACLR
ACLRN => adcDataLeftChannelRegister[0].ACLR
ACLRN => adcDataLeftChannelRegister[1].ACLR
ACLRN => adcDataLeftChannelRegister[2].ACLR
ACLRN => adcDataLeftChannelRegister[3].ACLR
ACLRN => adcDataLeftChannelRegister[4].ACLR
ACLRN => adcDataLeftChannelRegister[5].ACLR
ACLRN => adcDataLeftChannelRegister[6].ACLR
ACLRN => adcDataLeftChannelRegister[7].ACLR
ACLRN => adcDataLeftChannelRegister[8].ACLR
ACLRN => adcDataLeftChannelRegister[9].ACLR
ACLRN => adcDataLeftChannelRegister[10].ACLR
ACLRN => adcDataLeftChannelRegister[11].ACLR
ACLRN => adcDataLeftChannelRegister[12].ACLR
ACLRN => adcDataLeftChannelRegister[13].ACLR
ACLRN => adcDataLeftChannelRegister[14].ACLR
ACLRN => adcDataLeftChannelRegister[15].ACLR
ACLRN => dataInClock~reg0.ENA
selectAdcData => dacData.OUTPUTSELECT
selectAdcData => dacData.OUTPUTSELECT
audioClock => internalBitClock.CLK
audioClock => bitClockCounter[0].CLK
audioClock => bitClockCounter[1].CLK
audioClock => bitClockCounter[2].CLK
audioClock => bitClockCounter[3].CLK
audioClock => bitClockCounter[4].CLK
audioClock => bitClockCounter[5].CLK
audioClock => bitClockCounter[6].CLK
audioClock => bitClockCounter[7].CLK
bitClock <= internalBitClock.DB_MAX_OUTPUT_PORT_TYPE
adcLRSelect <= internalLRSelect.DB_MAX_OUTPUT_PORT_TYPE
dacLRSelect <= internalLRSelect.DB_MAX_OUTPUT_PORT_TYPE
adcData => adcDataLeftChannelRegister[0].DATAIN
dacData <= dacData~reg0.DB_MAX_OUTPUT_PORT_TYPE
leftDataIn[0] => ~NO_FANOUT~
leftDataIn[1] => ~NO_FANOUT~
leftDataIn[2] => ~NO_FANOUT~
leftDataIn[3] => ~NO_FANOUT~
rightDataIn[0] => dacDataRightChannelRegister.DATAB
rightDataIn[1] => dacDataRightChannelRegister.DATAB
rightDataIn[2] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
rightDataIn[3] => dacDataRightChannelRegister.DATAB
dataInClock <= dataInClock~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_AudioCodec:b2v_inst_audioCodecController
AClrn => Selector0.IN4
AClrn => I2C_Controller:i2cController.reset
AClrn => i2cClock20KHz.ACLR
AClrn => i2cClockCounter[0].ACLR
AClrn => i2cClockCounter[1].ACLR
AClrn => i2cClockCounter[2].ACLR
AClrn => i2cClockCounter[3].ACLR
AClrn => i2cClockCounter[4].ACLR
AClrn => i2cClockCounter[5].ACLR
AClrn => i2cClockCounter[6].ACLR
AClrn => i2cClockCounter[7].ACLR
AClrn => i2cClockCounter[8].ACLR
AClrn => i2cClockCounter[9].ACLR
AClrn => muxSelect[0].ACLR
AClrn => muxSelect[1].ACLR
AClrn => muxSelect[2].ACLR
AClrn => muxSelect[3].ACLR
AClrn => nextState.resetState.DATAB
audioClock => i2cClock20KHz.CLK
audioClock => i2cClockCounter[0].CLK
audioClock => i2cClockCounter[1].CLK
audioClock => i2cClockCounter[2].CLK
audioClock => i2cClockCounter[3].CLK
audioClock => i2cClockCounter[4].CLK
audioClock => i2cClockCounter[5].CLK
audioClock => i2cClockCounter[6].CLK
audioClock => i2cClockCounter[7].CLK
audioClock => i2cClockCounter[8].CLK
audioClock => i2cClockCounter[9].CLK
scl <= I2C_Controller:i2cController.I2C_SCLK
sda <> I2C_Controller:i2cController.I2C_SDAT
stateOut[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
stateOut[1] <= stateOut.DB_MAX_OUTPUT_PORT_TYPE
stateOut[2] <= stateOut.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_AudioCodec:b2v_inst_audioCodecController|I2C_Controller:i2cController
CLOCK => SD[0].CLK
CLOCK => SD[1].CLK
CLOCK => SD[2].CLK
CLOCK => SD[3].CLK
CLOCK => SD[4].CLK
CLOCK => SD[5].CLK
CLOCK => SD[6].CLK
CLOCK => SD[7].CLK
CLOCK => SD[8].CLK
CLOCK => SD[9].CLK
CLOCK => SD[10].CLK
CLOCK => SD[11].CLK
CLOCK => SD[12].CLK
CLOCK => SD[13].CLK
CLOCK => SD[14].CLK
CLOCK => SD[15].CLK
CLOCK => SD[16].CLK
CLOCK => SD[17].CLK
CLOCK => SD[18].CLK
CLOCK => SD[19].CLK
CLOCK => SD[20].CLK
CLOCK => SD[21].CLK
CLOCK => SD[22].CLK
CLOCK => SD[23].CLK
CLOCK => done~reg0.CLK
CLOCK => ACK3.CLK
CLOCK => ACK2.CLK
CLOCK => ACK1.CLK
CLOCK => SDO~reg0.CLK
CLOCK => SCLK.CLK
CLOCK => SD_COUNTER[0]~reg0.CLK
CLOCK => SD_COUNTER[1]~reg0.CLK
CLOCK => SD_COUNTER[2]~reg0.CLK
CLOCK => SD_COUNTER[3]~reg0.CLK
CLOCK => SD_COUNTER[4]~reg0.CLK
CLOCK => SD_COUNTER[5]~reg0.CLK
CLOCK => comb.DATAB
I2C_SCLK <= comb.DB_MAX_OUTPUT_PORT_TYPE
I2C_SDAT <> I2C_SDAT
I2C_DATA[0] => SD.DATAB
I2C_DATA[1] => SD.DATAB
I2C_DATA[2] => SD.DATAB
I2C_DATA[3] => SD.DATAB
I2C_DATA[4] => SD.DATAB
I2C_DATA[5] => SD.DATAB
I2C_DATA[6] => SD.DATAB
I2C_DATA[7] => SD.DATAB
I2C_DATA[8] => SD.DATAB
I2C_DATA[9] => SD.DATAB
I2C_DATA[10] => SD.DATAB
I2C_DATA[11] => SD.DATAB
I2C_DATA[12] => SD.DATAB
I2C_DATA[13] => SD.DATAB
I2C_DATA[14] => SD.DATAB
I2C_DATA[15] => SD.DATAB
I2C_DATA[16] => SD.DATAB
I2C_DATA[17] => SD.DATAB
I2C_DATA[18] => SD.DATAB
I2C_DATA[19] => SD.DATAB
I2C_DATA[20] => SD.DATAB
I2C_DATA[21] => SD.DATAB
I2C_DATA[22] => SD.DATAB
I2C_DATA[23] => SD.DATAB
RESET => done~reg0.PRESET
RESET => ACK3.ACLR
RESET => ACK2.ACLR
RESET => ACK1.ACLR
RESET => SDO~reg0.PRESET
RESET => SCLK.PRESET
RESET => SD_COUNTER[0]~reg0.PRESET
RESET => SD_COUNTER[1]~reg0.PRESET
RESET => SD_COUNTER[2]~reg0.PRESET
RESET => SD_COUNTER[3]~reg0.PRESET
RESET => SD_COUNTER[4]~reg0.PRESET
RESET => SD_COUNTER[5]~reg0.PRESET
RESET => SD[0].ENA
RESET => SD[23].ENA
RESET => SD[22].ENA
RESET => SD[21].ENA
RESET => SD[20].ENA
RESET => SD[19].ENA
RESET => SD[18].ENA
RESET => SD[17].ENA
RESET => SD[16].ENA
RESET => SD[15].ENA
RESET => SD[14].ENA
RESET => SD[13].ENA
RESET => SD[12].ENA
RESET => SD[11].ENA
RESET => SD[10].ENA
RESET => SD[9].ENA
RESET => SD[8].ENA
RESET => SD[7].ENA
RESET => SD[6].ENA
RESET => SD[5].ENA
RESET => SD[4].ENA
RESET => SD[3].ENA
RESET => SD[2].ENA
RESET => SD[1].ENA
start => SD_COUNTER.OUTPUTSELECT
start => SD_COUNTER.OUTPUTSELECT
start => SD_COUNTER.OUTPUTSELECT
start => SD_COUNTER.OUTPUTSELECT
start => SD_COUNTER.OUTPUTSELECT
start => SD_COUNTER.OUTPUTSELECT
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
readWriteEnable => ~NO_FANOUT~
ACK <= comb.DB_MAX_OUTPUT_PORT_TYPE
SD_COUNTER[0] <= SD_COUNTER[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SD_COUNTER[1] <= SD_COUNTER[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SD_COUNTER[2] <= SD_COUNTER[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SD_COUNTER[3] <= SD_COUNTER[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SD_COUNTER[4] <= SD_COUNTER[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SD_COUNTER[5] <= SD_COUNTER[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDO <= SDO~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_ClockGen:b2v_inst_clockGenrator
ACLRN => process_0.IN1
ACLRN => pllAudioClock:audioPllClockGen.areset
Clock_50 => pllAudioClock:audioPllClockGen.inclk0
AudioClock <= pllAudioClock:audioPllClockGen.c0
Delayed_Clrn <= Delayed_Clrn~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_ClockGen:b2v_inst_clockGenrator|pllAudioClock:audioPllClockGen
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_ClockGen:b2v_inst_clockGenrator|pllAudioClock:audioPllClockGen|altpll:altpll_component
inclk[0] => pllAudioClock_altpll:auto_generated.inclk[0]
inclk[1] => pllAudioClock_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pllAudioClock_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pllAudioClock_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_ClockGen:b2v_inst_clockGenrator|pllAudioClock:audioPllClockGen|altpll:altpll_component|pllAudioClock_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|Buzzer750Hz:inst8|Buzzer:inst_Buzzer|Buzzer_SinGen:b2v_inst_sinGen
CLK => clk2.CLK
CLK => cnt[0].CLK
CLK => cnt[1].CLK
CLK => cnt[2].CLK
CLK => cnt[3].CLK
CLK => cnt[4].CLK
ACLRN => cnt[0].ACLR
ACLRN => cnt[1].ACLR
ACLRN => cnt[2].ACLR
ACLRN => cnt[3].ACLR
ACLRN => cnt[4].ACLR
ACLRN => waveCounter[0].ACLR
ACLRN => waveCounter[1].ACLR
ACLRN => waveCounter[2].ACLR
ACLRN => waveCounter[3].ACLR
ACLRN => waveCounter[4].ACLR
ACLRN => clk2.ENA
FREQ[0] => Add0.IN8
FREQ[1] => Add0.IN7
FREQ[2] => Add0.IN6
FREQ[3] => Add0.IN5
Q[0] <= Q.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|toWires18:inst12
Y[0] => X0.DATAIN
Y[1] => X1.DATAIN
Y[2] => X2.DATAIN
Y[3] => X3.DATAIN
Y[4] => X4.DATAIN
Y[5] => X5.DATAIN
Y[6] => X6.DATAIN
Y[7] => X7.DATAIN
Y[8] => X8.DATAIN
Y[9] => X9.DATAIN
Y[10] => X10.DATAIN
Y[11] => X11.DATAIN
Y[12] => X12.DATAIN
Y[13] => X13.DATAIN
Y[14] => X14.DATAIN
Y[15] => X15.DATAIN
Y[16] => X16.DATAIN
Y[17] => X17.DATAIN
X17 <= Y[17].DB_MAX_OUTPUT_PORT_TYPE
X16 <= Y[16].DB_MAX_OUTPUT_PORT_TYPE
X15 <= Y[15].DB_MAX_OUTPUT_PORT_TYPE
X14 <= Y[14].DB_MAX_OUTPUT_PORT_TYPE
X13 <= Y[13].DB_MAX_OUTPUT_PORT_TYPE
X12 <= Y[12].DB_MAX_OUTPUT_PORT_TYPE
X11 <= Y[11].DB_MAX_OUTPUT_PORT_TYPE
X10 <= Y[10].DB_MAX_OUTPUT_PORT_TYPE
X9 <= Y[9].DB_MAX_OUTPUT_PORT_TYPE
X8 <= Y[8].DB_MAX_OUTPUT_PORT_TYPE
X7 <= Y[7].DB_MAX_OUTPUT_PORT_TYPE
X6 <= Y[6].DB_MAX_OUTPUT_PORT_TYPE
X5 <= Y[5].DB_MAX_OUTPUT_PORT_TYPE
X4 <= Y[4].DB_MAX_OUTPUT_PORT_TYPE
X3 <= Y[3].DB_MAX_OUTPUT_PORT_TYPE
X2 <= Y[2].DB_MAX_OUTPUT_PORT_TYPE
X1 <= Y[1].DB_MAX_OUTPUT_PORT_TYPE
X0 <= Y[0].DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|ShiftLeft18:inst9
SI => rg.DATAA
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Load => rg.OUTPUTSELECT
Data[0] => rg.DATAB
Data[1] => rg.DATAB
Data[2] => rg.DATAB
Data[3] => rg.DATAB
Data[4] => rg.DATAB
Data[5] => rg.DATAB
Data[6] => rg.DATAB
Data[7] => rg.DATAB
Data[8] => rg.DATAB
Data[9] => rg.DATAB
Data[10] => rg.DATAB
Data[11] => rg.DATAB
Data[12] => rg.DATAB
Data[13] => rg.DATAB
Data[14] => rg.DATAB
Data[15] => rg.DATAB
Data[16] => rg.DATAB
Data[17] => rg.DATAB
CLK => \pshift:rg[0].CLK
CLK => \pshift:rg[1].CLK
CLK => \pshift:rg[2].CLK
CLK => \pshift:rg[3].CLK
CLK => \pshift:rg[4].CLK
CLK => \pshift:rg[5].CLK
CLK => \pshift:rg[6].CLK
CLK => \pshift:rg[7].CLK
CLK => \pshift:rg[8].CLK
CLK => \pshift:rg[9].CLK
CLK => \pshift:rg[10].CLK
CLK => \pshift:rg[11].CLK
CLK => \pshift:rg[12].CLK
CLK => \pshift:rg[13].CLK
CLK => \pshift:rg[14].CLK
CLK => \pshift:rg[15].CLK
CLK => \pshift:rg[16].CLK
CLK => \pshift:rg[17].CLK
LEDR[0] <= \pshift:rg[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= \pshift:rg[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= \pshift:rg[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= \pshift:rg[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= \pshift:rg[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= \pshift:rg[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= \pshift:rg[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= \pshift:rg[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= \pshift:rg[8].DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= \pshift:rg[9].DB_MAX_OUTPUT_PORT_TYPE
LEDR[10] <= \pshift:rg[10].DB_MAX_OUTPUT_PORT_TYPE
LEDR[11] <= \pshift:rg[11].DB_MAX_OUTPUT_PORT_TYPE
LEDR[12] <= \pshift:rg[12].DB_MAX_OUTPUT_PORT_TYPE
LEDR[13] <= \pshift:rg[13].DB_MAX_OUTPUT_PORT_TYPE
LEDR[14] <= \pshift:rg[14].DB_MAX_OUTPUT_PORT_TYPE
LEDR[15] <= \pshift:rg[15].DB_MAX_OUTPUT_PORT_TYPE
LEDR[16] <= \pshift:rg[16].DB_MAX_OUTPUT_PORT_TYPE
LEDR[17] <= \pshift:rg[17].DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|MorseBDF:inst1
Y <= Multiplexer4x1:instMux4.Y
X[0] => inst3.IN0
X[0] => inst4.IN1
X[0] => inst2.IN1
X[0] => inst10.IN1
X[0] => inst7.IN0
X[0] => inst15.IN1
X[0] => inst12.IN1
X[0] => inst19.IN1
X[0] => inst1.IN2
X[1] => inst.IN0
X[1] => inst2.IN0
X[1] => instNE.IN0
X[1] => inst7.IN1
X[1] => inst8.IN2
X[1] => inst13.IN1
X[2] => instND.IN0
X[2] => inst6.IN0
X[2] => inst1.IN3
X[3] => instNC.IN0
X[3] => inst6.IN1
X[3] => inst8.IN1
X[3] => inst13.IN2
X[4] => Multiplexer4x1:instMux4.sel[0]
X[4] => inst1.IN1
X[5] => Multiplexer4x1:instMux4.sel[1]
X[5] => inst1.IN0
STOP <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|MorseBDF:inst1|Multiplexer4x1:instMux4
X0 => Mux0.IN0
X1 => Mux0.IN1
X2 => Mux0.IN2
X3 => Mux0.IN3
sel[0] => Mux0.IN5
sel[1] => Mux0.IN4
Y <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|CounterUpGeneric:inst6
RESET => cnt.OUTPUTSELECT
RESET => cnt.OUTPUTSELECT
RESET => cnt.OUTPUTSELECT
RESET => cnt.OUTPUTSELECT
RESET => cnt.OUTPUTSELECT
RESET => cnt.OUTPUTSELECT
ENABLE => cnt.OUTPUTSELECT
ENABLE => cnt.OUTPUTSELECT
ENABLE => cnt.OUTPUTSELECT
ENABLE => cnt.OUTPUTSELECT
ENABLE => cnt.OUTPUTSELECT
ENABLE => cnt.OUTPUTSELECT
CLK => cnt[0].CLK
CLK => cnt[1].CLK
CLK => cnt[2].CLK
CLK => cnt[3].CLK
CLK => cnt[4].CLK
CLK => cnt[5].CLK
Q[0] <= cnt[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= cnt[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= cnt[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= cnt[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= cnt[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= cnt[5].DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|StartStop_FSM:inst5
STOP => Running.OUTPUTSELECT
START => Running.OUTPUTSELECT
CLK => \iStartStop:Running.CLK
RUN <= \iStartStop:Running.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|ClockDivider:inst11
CLK => q2.CLK
CLK => cnt[0].CLK
CLK => cnt[1].CLK
CLK => cnt[2].CLK
CLK => cnt[3].CLK
CLK => cnt[4].CLK
CLK => cnt[5].CLK
CLK => cnt[6].CLK
CLK => cnt[7].CLK
CLK => cnt[8].CLK
CLK => cnt[9].CLK
CLK => cnt[10].CLK
CLK => cnt[11].CLK
CLK => cnt[12].CLK
q <= q2.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|ClockDivider:inst10
CLK => q2.CLK
CLK => cnt[0].CLK
CLK => cnt[1].CLK
CLK => cnt[2].CLK
CLK => cnt[3].CLK
CLK => cnt[4].CLK
CLK => cnt[5].CLK
CLK => cnt[6].CLK
CLK => cnt[7].CLK
CLK => cnt[8].CLK
q <= q2.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|to7SegHex:inst23
X[0] => Mux0.IN19
X[0] => Mux1.IN19
X[0] => Mux2.IN19
X[0] => Mux3.IN19
X[0] => Mux4.IN19
X[0] => Mux5.IN19
X[0] => Mux6.IN19
X[1] => Mux0.IN18
X[1] => Mux1.IN18
X[1] => Mux2.IN18
X[1] => Mux3.IN18
X[1] => Mux4.IN18
X[1] => Mux5.IN18
X[1] => Mux6.IN18
X[2] => Mux0.IN17
X[2] => Mux1.IN17
X[2] => Mux2.IN17
X[2] => Mux3.IN17
X[2] => Mux4.IN17
X[2] => Mux5.IN17
X[2] => Mux6.IN17
X[3] => Mux0.IN16
X[3] => Mux1.IN16
X[3] => Mux2.IN16
X[3] => Mux3.IN16
X[3] => Mux4.IN16
X[3] => Mux5.IN16
X[3] => Mux6.IN16
HEX[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|toBCD2digits:inst21
bin[0] => toBCDgeneric:ibcd.N[0]
bin[1] => toBCDgeneric:ibcd.N[1]
bin[2] => toBCDgeneric:ibcd.N[2]
bin[3] => toBCDgeneric:ibcd.N[3]
bin[4] => toBCDgeneric:ibcd.N[4]
bin[5] => toBCDgeneric:ibcd.N[5]
bcd1[0] <= toBCDgeneric:ibcd.BCD[4]
bcd1[1] <= toBCDgeneric:ibcd.BCD[5]
bcd1[2] <= toBCDgeneric:ibcd.BCD[6]
bcd1[3] <= toBCDgeneric:ibcd.BCD[7]
bcd0[0] <= toBCDgeneric:ibcd.BCD[0]
bcd0[1] <= toBCDgeneric:ibcd.BCD[1]
bcd0[2] <= toBCDgeneric:ibcd.BCD[2]
bcd0[3] <= toBCDgeneric:ibcd.BCD[3]


|MorseZhytnboh|toBCD2digits:inst21|toBCDgeneric:ibcd
N[0] => BCD[0].DATAIN
N[1] => LessThan2.IN8
N[1] => Add2.IN8
N[1] => adjust.DATAA
N[2] => LessThan1.IN8
N[2] => Add1.IN8
N[2] => adjust.DATAA
N[3] => LessThan0.IN6
N[3] => Add0.IN6
N[3] => adjust.DATAA
N[4] => LessThan0.IN5
N[4] => Add0.IN5
N[4] => adjust.DATAA
N[5] => LessThan0.IN4
N[5] => Add0.IN4
N[5] => adjust.DATAA
BCD[0] <= N[0].DB_MAX_OUTPUT_PORT_TYPE
BCD[1] <= adjust.DB_MAX_OUTPUT_PORT_TYPE
BCD[2] <= adjust.DB_MAX_OUTPUT_PORT_TYPE
BCD[3] <= adjust.DB_MAX_OUTPUT_PORT_TYPE
BCD[4] <= adjust.DB_MAX_OUTPUT_PORT_TYPE
BCD[5] <= adjust.DB_MAX_OUTPUT_PORT_TYPE
BCD[6] <= adjust.DB_MAX_OUTPUT_PORT_TYPE
BCD[7] <= <GND>


|MorseZhytnboh|to7SegHex:inst22
X[0] => Mux0.IN19
X[0] => Mux1.IN19
X[0] => Mux2.IN19
X[0] => Mux3.IN19
X[0] => Mux4.IN19
X[0] => Mux5.IN19
X[0] => Mux6.IN19
X[1] => Mux0.IN18
X[1] => Mux1.IN18
X[1] => Mux2.IN18
X[1] => Mux3.IN18
X[1] => Mux4.IN18
X[1] => Mux5.IN18
X[1] => Mux6.IN18
X[2] => Mux0.IN17
X[2] => Mux1.IN17
X[2] => Mux2.IN17
X[2] => Mux3.IN17
X[2] => Mux4.IN17
X[2] => Mux5.IN17
X[2] => Mux6.IN17
X[3] => Mux0.IN16
X[3] => Mux1.IN16
X[3] => Mux2.IN16
X[3] => Mux3.IN16
X[3] => Mux4.IN16
X[3] => Mux5.IN16
X[3] => Mux6.IN16
HEX[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MorseZhytnboh|MorseZHYT:inst
X[0] => Y01.IN0
X[0] => Y01.IN0
X[0] => Y10.IN0
X[0] => Y10.IN0
X[0] => Y11.IN0
X[0] => STOP.IN1
X[1] => Y00.IN0
X[1] => Y01.IN1
X[1] => Y10.IN0
X[1] => Y11.IN0
X[1] => Y01.IN1
X[2] => Y01.IN1
X[2] => STOP.IN1
X[2] => Y11.IN1
X[2] => Y11.IN1
X[2] => Y10.IN1
X[2] => Y10.IN1
X[2] => Y01.IN1
X[2] => Y01.IN1
X[3] => Y01.IN1
X[3] => Y10.IN1
X[3] => Y11.IN1
X[3] => Y11.IN1
X[3] => Y01.IN1
X[3] => Y00.IN1
X[4] => STOP.IN0
X[4] => Mux0.IN1
X[5] => STOP.IN1
X[5] => Mux0.IN0
STOP <= STOP.DB_MAX_OUTPUT_PORT_TYPE
Y <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


